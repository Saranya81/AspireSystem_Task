
# Git Task Repository

Welcome to the Git Task Repository! This repository serves as a practice ground for learning and mastering Git commands. Here, you can explore various Git functionalities, experiment with branches, handle merge conflicts, and understand version control workflows.

## Repository Overview

- **Repository Link**: [Saranya81/git_task](https://github.com/Saranya81/git_task)
- **Files**: The repository contains three files: `dummy.txt`, `index.html`, and `style.css`.
- **Branches**: There are three branches in this repository: `main`, `frontend`, and `backend`.

## Git Commands and Activities

### 1. Adding and Committing Changes
- **`git add <file>`**: Adds changes in a specified file to the staging area.
- **`git commit -m "<message>"`**: Commits the staged changes with a descriptive message.
  
### 2. Pushing Changes to Remote Repository
- **`git push`**: Pushes committed changes from the local repository to the remote repository.

### 3. Pulling Changes from Remote Repository
- **`git pull`**: Fetches changes from the remote repository and merges them into the local branch.

### 4. Creating and Switching Branches
- **`git checkout -b <branch-name>`**: Creates a new branch and switches to it.
- **`git branch`**: Lists all existing branches in the repository.
- **`git checkout <branch-name>`**: Switches to the specified branch.

### 5. Resolving Merge Conflicts
- During branch merges, Git may encounter conflicts when the same file is modified in different branches. Resolve conflicts by editing the conflicted files and then committing the changes.

## What I Learned

Through this Git activity, I've gained hands-on experience in the following areas:

- **Basic Git Commands**: Learned how to add, commit, push, pull, and switch branches using Git commands.
- **Branching**: Explored branching concepts, including creating, switching, and merging branches.
- **Conflict Resolution**: Practiced resolving merge conflicts that occur when integrating changes from different branches.
- **Version Control Workflow**: Understood the importance of version control and how Git facilitates collaborative development.

## How to Use This Repository

1. **Clone the Repository**: Clone this repository to your local machine using the command:
   ```
   git clone https://github.com/Saranya81/git_task.git
   ```

2. **Explore Git Commands**: Navigate through the repository's commit history to observe the Git commands executed and understand their effects.

3. **Practice Git Commands**: Experiment with Git commands by creating branches, making changes, and observing their impact on the repository's history.

4. **Contribute**: Feel free to contribute to this repository by forking it, making changes, and submitting pull requests to enhance the learning experience for others.

## Feedback and Contributions

Feedback and contributions to this repository are highly appreciated. If you have suggestions for improving the Git Task Repository or would like to add more exercises, please open an issue or submit a pull request.

---

Feel free to customize this README further or add any additional sections to suit your preferences and the goals of your Git learning journey. Happy coding and Git exploring!
